{"version":3,"sources":["components/Login/index.js","components/Header/index.js","components/Home/index.js","components/JobCard/index.js","components/Jobs/index.js","components/SimilarJobs/index.js","components/JobItemDetails/index.js","components/NotFound/index.js","components/ProtectedRoute/index.js","App.js","index.js"],"names":["Login","state","username","password","showError","errorMsg","onChangeUsername","event","setState","target","value","onChangePassword","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","replace","onSubmitFailure","onSubmitForm","a","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","ok","jwt_token","error_msg","renderUsername","className","htmlFor","type","id","placeholder","onChange","renderPassword","this","undefined","get","to","onSubmit","src","alt","Component","withRouter","onClickLogout","remove","onClick","Home","JobCard","jobData","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","apiStatusConstants","apiJobsStatusConstants","failureViewImg","Jobs","profileData","jobsData","checkboxInputs","radioInput","searchInput","apiStatus","apiJobsStatus","componentDidMount","onGetProfile","onGetJobs","optionsProfile","headers","Authorization","responseProfile","fetchedDataProfile","updatedDataProfile","map","eachItem","name","profile_details","profileImageUrl","profile_image_url","shortBio","short_bio","responseSuccess","jobsApiUrl","optionsJobs","responseJobs","fetchedDataJobs","updatedDataJobs","jobs","company_logo_url","employment_type","job_description","package_per_annum","onGetRadioOption","onGetJobDetails","onGetInputOption","filter","length","prevState","filteredData","onGetProfileView","onRetryProfile","onGetProfileDetails","onGetProfileFailureView","renderLoadingView","testid","color","height","width","onRenderProfileStatus","onRetryJobs","onGetJobsFailureView","onGetJobsView","onRenderJobsStatus","onGetCheckBoxesView","onGetRadioButtonsView","onGetSearchInput","onSubmitSearchInput","onEnterSearchInput","key","onKeyDown","SimilarJobs","similarJobData","JobItemDetails","jobDataDetails","similarJobsData","getJobData","match","params","jobDetailsApiUrl","optionsJobData","responseJobData","fetchedJobData","updatedJobDetailsData","job_details","companyWebsiteUrl","company_website_url","lifeAtCompany","description","life_at_company","imageUrl","image_url","skills","eachSkill","updatedSimilarJobDetails","similar_jobs","renderJobDetailsSuccessView","href","onRetryJobDetailsAgain","renderJobFailureView","renderJobLoadingView","renderJobDetails","NotFound","ProtectedRoute","Cookie","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0329c37d.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\n\nimport {Redirect} from 'react-router-dom'\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    showError: false,\n    errorMsg: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({\n      username: event.target.value,\n    })\n  }\n\n  onChangePassword = event => {\n    this.setState({\n      password: event.target.value,\n    })\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({\n      showError: true,\n      errorMsg,\n    })\n  }\n\n  onSubmitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {\n      username,\n      password,\n    }\n\n    const url = 'https://apis.ccbp.in/login'\n\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  renderUsername = () => {\n    const {username} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"username\">\n          {' '}\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          placeholder=\"Username\"\n          className=\"username-input-field\"\n          value={username}\n          onChange={this.onChangeUsername}\n        />\n      </>\n    )\n  }\n\n  renderPassword = () => {\n    const {password} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"password\">\n          PASSWORD{' '}\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          placeholder=\"Password\"\n          className=\"password-input-field\"\n          value={password}\n          onChange={this.onChangePassword}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-container\">\n        <form className=\"form-container\" onSubmit={this.onSubmitForm}>\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"login-website-logo-mobile-image\"\n          />\n          <div className=\"input-container\"> {this.renderUsername()}</div>\n          <div className=\"input-container\"> {this.renderPassword()} </div>\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n          {showError && <p className=\"error-message\"> * {errorMsg}</p>}\n        </form>\n      </div>\n    )\n  }\n}\nexport default Login\n","import {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  return (\n    <div>\n      <nav className=\"nav-header\">\n        <div className=\"nav-content\">\n          <div className=\"nav-bar-mobile-logo-container\">\n            <Link to=\"/\">\n              <img\n                className=\"website-logo\"\n                src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png \"\n                alt=\"website logo\"\n              />\n            </Link>\n            <Link to=\"/\" className=\"nav-link\">\n              <img\n                src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-home-icon.png\"\n                alt=\"\"\n                className=\"nav-bar-image\"\n              />\n            </Link>\n            <Link to=\"/jobs\" className=\"nav-link\">\n              <img\n                src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-products-icon.png\"\n                alt=\"nav products\"\n                className=\"nav-bar-image\"\n              />\n            </Link>\n            <button type=\"button\" className=\"nav-mobile-btn\">\n              <img\n                src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz-log-out-img.png\"\n                alt=\"\"\n                className=\"nav-bar-image\"\n                onClick={onClickLogout}\n              />\n            </button>\n          </div>\n          <div className=\"nav-bar-large-container\">\n            <div>\n              <img\n                className=\"website-logo\"\n                src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png \"\n                alt=\"website logo\"\n              />\n            </div>\n            <div>\n              <ul className=\"nav-menu\">\n                <li className=\"nav-menu-item\">\n                  <Link to=\"/\" className=\"nav-link\">\n                    Home\n                  </Link>\n                </li>\n                <li className=\"nav-menu-item\">\n                  <Link to=\"/jobs\" className=\"nav-link\">\n                    Jobs\n                  </Link>\n                </li>\n              </ul>\n            </div>\n            <li className=\"button\">\n              <button\n                type=\"button\"\n                className=\"logout-desktop-btn\"\n                onClick={onClickLogout}\n              >\n                Logout\n              </button>\n            </li>\n          </div>\n        </div>\n      </nav>\n    </div>\n  )\n}\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\nimport './index.css'\nimport Header from '../Header'\n\nconst Home = () => (\n  <>\n    <Header />\n    <div className=\"home-container\">\n      <div className=\"home-content\">\n        <h1 className=\"home-heading\"> Find The Job That Fits Your Life </h1>\n        <p className=\"home-description\">\n          Millions of people are searching for jobs, salary information, company\n          reviews.Find the job that fits your abilities and potential.\n        </p>\n        <Link to=\"/jobs\">\n          <button type=\"button\" className=\"jobs-button\">\n            Find Jobs\n          </button>\n        </Link>\n      </div>\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/home-lg-bg.png\"\n        alt=\"clothes that get you noticed\"\n        className=\"home-desktop-img\"\n      />\n    </div>\n  </>\n)\nexport default Home\n","import {Link} from 'react-router-dom'\nimport {MdLocationOn} from 'react-icons/md'\nimport {AiFillStar} from 'react-icons/ai'\nimport './index.css'\n\nconst JobCard = props => {\n  const {jobData} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    id,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    rating,\n    title,\n  } = jobData\n  return (\n    <Link to={`/jobs/${id}`} className=\"link-item\">\n      <li className=\"job-item-container\">\n        <div className=\"first-part-container\">\n          <div className=\"img-title-container\">\n            <img\n              className=\"company-logo\"\n              src={companyLogoUrl}\n              alt=\"company logo\"\n            />\n            <div className=\"title-rating-container\">\n              <h1 className=\"title-heading\">{title}</h1>\n              <div className=\"star-rating-container\">\n                <AiFillStar className=\"star-icon\" />\n                <p className=\"rating-text\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"location-package-container\">\n            <div className=\"location-job-type-container\">\n              <div className=\"location-icon-location-container\">\n                <MdLocationOn className=\"location-icon\" />\n                <p className=\"location\">{location}</p>\n              </div>\n              <div className=\"employment-type-icon-employment-type-container\">\n                <p className=\"job-type\">{employmentType}</p>\n              </div>\n            </div>\n            <div>\n              <p className=\"package\">{packagePerAnnum}</p>\n            </div>\n          </div>\n        </div>\n        <hr className=\"item-hr-line\" />\n        <div className=\"second-part-container\">\n          <h1 className=\"description-heading\">Description</h1>\n          <p className=\"description-para\">{jobDescription}</p>\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nexport default JobCard\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\nimport {BsSearch} from 'react-icons/bs'\nimport Header from '../Header'\nimport JobCard from '../JobCard'\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nconst apiJobsStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nconst failureViewImg =\n  'https://assets.ccbp.in/frontend/react-js/failure-img.png'\n\nclass Jobs extends Component {\n  state = {\n    profileData: [],\n    jobsData: [],\n    checkboxInputs: [],\n    radioInput: '',\n    searchInput: '',\n    apiStatus: apiStatusConstants.initial,\n    apiJobsStatus: apiJobsStatusConstants.initial,\n  }\n\n  componentDidMount = () => {\n    this.onGetProfile()\n    this.onGetJobs()\n  }\n\n  onGetProfile = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const jwtToken = Cookies.get('jwt_token')\n    // eslint-disable-next-line no-unused-vars\n    const {checkboxInputs, radioInput, searchInput} = this.state\n    const profileApiUrl = 'https://apis.ccbp.in/profile'\n    const optionsProfile = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const responseProfile = await fetch(profileApiUrl, optionsProfile)\n\n    if (responseProfile.ok === true) {\n      const fetchedDataProfile = [await responseProfile.json()]\n      const updatedDataProfile = fetchedDataProfile.map(eachItem => ({\n        name: eachItem.profile_details.name,\n        profileImageUrl: eachItem.profile_details.profile_image_url,\n        shortBio: eachItem.profile_details.short_bio,\n      }))\n      this.setState({\n        profileData: updatedDataProfile,\n        responseSuccess: true,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  onGetJobs = async () => {\n    this.setState({apiJobsStatus: apiJobsStatusConstants.inProgress})\n    const jwtToken = Cookies.get('jwt_token')\n    const {checkboxInputs, radioInput, searchInput} = this.state\n    const jobsApiUrl = `https://apis.ccbp.in/jobs?employment_type=${checkboxInputs}&minimum_package=${radioInput}&search=${searchInput}`\n    const optionsJobs = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const responseJobs = await fetch(jobsApiUrl, optionsJobs)\n    if (responseJobs.ok === true) {\n      const fetchedDataJobs = await responseJobs.json()\n      const updatedDataJobs = fetchedDataJobs.jobs.map(eachItem => ({\n        companyLogoUrl: eachItem.company_logo_url,\n        employmentType: eachItem.employment_type,\n        id: eachItem.id,\n        jobDescription: eachItem.job_description,\n        location: eachItem.location,\n        packagePerAnnum: eachItem.package_per_annum,\n        rating: eachItem.rating,\n        title: eachItem.title,\n      }))\n      this.setState({\n        jobsData: updatedDataJobs,\n        apiJobsStatus: apiJobsStatusConstants.success,\n      })\n    } else {\n      this.setState({apiJobsStatus: apiJobsStatusConstants.failure})\n    }\n  }\n\n  onGetRadioOption = event => {\n    this.setState({radioInput: event.target.id}, this.onGetJobDetails)\n  }\n\n  onGetInputOption = event => {\n    const {checkboxInputs} = this.state\n    const inputNotInList = checkboxInputs.filter(\n      eachItem => eachItem === event.target.id,\n    )\n    if (inputNotInList.length === 0) {\n      this.setState(\n        prevState => ({\n          checkboxInputs: [...prevState.checkboxInputs, event.target.id],\n        }),\n        this.onGetJobDetails,\n      )\n    } else {\n      const filteredData = checkboxInputs.filter(\n        eachItem => eachItem !== event.target.id,\n      )\n      this.setState(\n        // eslint-disable-next-line no-unused-vars\n        prevState => ({checkboxInputs: filteredData}),\n        this.onGetJobDetails,\n      )\n    }\n  }\n\n  onGetProfileView = () => {\n    const {profileData, responseSuccess} = this.state\n    if (responseSuccess) {\n      const {name, profileImageUrl, shortBio} = profileData[0]\n      return (\n        <div className=\"profile-container\">\n          <img src={profileImageUrl} className=\"profile-icon\" alt=\"profile\" />\n          <h1 className=\"profile-name\">{name}</h1>\n          <p className=\"profile-description\">{shortBio}</p>\n        </div>\n      )\n    }\n    return null\n  }\n\n  onRetryProfile = () => {\n    this.onGetProfileDetails()\n  }\n\n  onGetProfileFailureView = () => (\n    <div className=\"failure-button-container\">\n      <button\n        className=\"failure-button\"\n        type=\"button\"\n        onClick={this.onRetryProfile}\n      >\n        retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  onRenderProfileStatus = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.onGetProfileView()\n      case apiStatusConstants.failure:\n        return this.onGetProfileFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  onRetryJobs = () => {\n    this.onGetJobDetails()\n  }\n\n  onGetJobsFailureView = () => (\n    <div className=\"failure-img-button-container\">\n      <img className=\"failure-img\" src={failureViewImg} alt=\"failure view\" />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-paragraph\">\n        we cannot seem to find the page you are looking for\n      </p>\n      <div className=\"jobs-failure-button-container\">\n        <button\n          className=\"failure-button\"\n          type=\"button\"\n          onClick={this.onRetryJobs}\n        >\n          retry\n        </button>\n      </div>\n    </div>\n  )\n\n  onGetJobsView = () => {\n    const {jobsData} = this.state\n    const noJobs = jobsData.length === 0\n    return noJobs ? (\n      <div className=\"no-jobs-container\">\n        <img\n          className=\"no-jobs-img\"\n          src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n          alt=\"no jobs\"\n        />\n        <h1>No jobs found</h1>\n        <p>We could not find any jobs. Try other filters.</p>\n      </div>\n    ) : (\n      <ul className=\"ul-job-items-container\">\n        {jobsData.map(eachItem => (\n          <JobCard key={eachItem.id} jobData={eachItem} />\n        ))}\n      </ul>\n    )\n  }\n\n  onRenderJobsStatus = () => {\n    const {apiJobsStatus} = this.state\n\n    switch (apiJobsStatus) {\n      case apiJobsStatusConstants.success:\n        return this.onGetJobsView()\n      case apiJobsStatusConstants.failure:\n        return this.onGetJobsFailureView()\n      case apiJobsStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  onGetCheckBoxesView = () => (\n    <ul className=\"check-boxes-container\">\n      {employmentTypesList.map(eachItem => (\n        <li className=\"li-container\" key={eachItem.employmentTypeId}>\n          <input\n            className=\"input\"\n            id={eachItem.employmentTypeId}\n            type=\"checkbox\"\n            onChange={this.onGetInputOption}\n          />\n          <label className=\"label\" htmlFor={eachItem.employmentTypeId}>\n            {eachItem.label}\n          </label>\n        </li>\n      ))}\n    </ul>\n  )\n\n  onGetRadioButtonsView = () => (\n    <ul className=\"radio-button-container\">\n      {salaryRangesList.map(eachItem => (\n        <li className=\"li-container\" key={eachItem.salaryRangeId}>\n          <input\n            className=\"radio\"\n            id={eachItem.salaryRangeId}\n            type=\"radio\"\n            name=\"option\"\n            onChange={this.onGetRadioOption}\n          />\n          <label className=\"label\" htmlFor={eachItem.salaryRangeId}>\n            {eachItem.label}\n          </label>\n        </li>\n      ))}\n    </ul>\n  )\n\n  onGetSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  onSubmitSearchInput = () => {\n    this.onGetJobDetails()\n  }\n\n  onEnterSearchInput = event => {\n    if (event.key === 'Enter') {\n      this.onGetJobDetails()\n    }\n  }\n\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const {checkboxInputs, radioInput, searchInput} = this.state\n    return (\n      <>\n        <Header />\n        <div className=\"all-jobs-container\">\n          <div className=\"side-bar-container\">\n            {this.onRenderProfileStatus()}\n            <hr className=\"hr-line\" />\n            <h1 className=\"text\">Type of Employment</h1>\n            {this.onGetCheckBoxesView()}\n            <hr className=\"hr-line\" />\n            <h1 className=\"text\">Salary Range</h1>\n            {this.onGetRadioButtonsView()}\n          </div>\n          <div className=\"jobs-container\">\n            <div>\n              <input\n                className=\"search-input\"\n                type=\"search\"\n                value={searchInput}\n                placeholder=\"Search\"\n                onChange={this.onGetSearchInput}\n                onKeyDown={this.onEnterSearchInput}\n              />\n              <button\n                testid=\"searchButton\"\n                type=\"button\"\n                className=\"search-button\"\n                onClick={this.onSubmitSearchInput}\n              >\n                <BsSearch className=\"search-icon\" />\n              </button>\n            </div>\n            {this.onRenderJobsStatus()}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Jobs\n","import {MdLocationOn} from 'react-icons/md'\nimport {AiFillStar} from 'react-icons/ai'\nimport './index.css'\n\nconst SimilarJobs = props => {\n  const {similarJobData, employmentType} = props\n  const {\n    companyLogoUrl,\n    // eslint-disable-next-line no-unused-vars\n    id,\n    jobDescription,\n    location,\n    rating,\n    title,\n  } = similarJobData\n  return (\n    <li className=\"similar-job-li-container\">\n      <div className=\"img-job-title-container\">\n        <img\n          className=\"company-job-logo\"\n          src={companyLogoUrl}\n          alt=\"similar job company logo\"\n        />\n        <div className=\"title-job-rating-container\">\n          <h1 className=\"title-job-heading\">{title}</h1>\n          <div className=\"star-job-rating-container\">\n            <AiFillStar className=\"star-job-icon\" />\n            <p className=\"rating-job-text\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"second-part-job-container\">\n        <h1 className=\"description-job-heading\">Description</h1>\n        <p className=\"description-job-para\">{jobDescription}</p>\n      </div>\n      <div className=\"location-job-details-type-container\">\n        <div className=\"location-job-icon-location-container\">\n          <MdLocationOn className=\"location-job-icon\" />\n          <p className=\"location-job\">{location}</p>\n        </div>\n        <div className=\"employment-job-type-icon-employment-type-container\">\n          <p className=\"job-type\">{employmentType}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SimilarJobs\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {MdLocationOn} from 'react-icons/md'\nimport {AiFillStar} from 'react-icons/ai'\nimport {BiLinkExternal} from 'react-icons/bi'\nimport Loader from 'react-loader-spinner'\nimport Header from '../Header'\nimport SimilarJobs from '../SimilarJobs'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass JobItemDetails extends Component {\n  state = {\n    jobDataDetails: [],\n    similarJobsData: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getJobData()\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  getJobData = async props => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const jobDetailsApiUrl = `https://apis.ccbp.in/jobs/${id}`\n    const optionsJobData = {\n      headers: {Authorization: `Bearer ${jwtToken}`},\n      method: 'GET',\n    }\n    const responseJobData = await fetch(jobDetailsApiUrl, optionsJobData)\n    if (responseJobData.ok === true) {\n      const fetchedJobData = await responseJobData.json()\n      const updatedJobDetailsData = [fetchedJobData.job_details].map(\n        eachItem => ({\n          companyLogoUrl: eachItem.company_logo_url,\n          companyWebsiteUrl: eachItem.company_website_url,\n          employmentType: eachItem.employment_type,\n          id: eachItem.id,\n          jobDescription: eachItem.job_description,\n          lifeAtCompany: {\n            description: eachItem.life_at_company.description,\n            imageUrl: eachItem.life_at_company.image_url,\n          },\n          location: eachItem.location,\n          packagePerAnnum: eachItem.package_per_annum,\n          rating: eachItem.rating,\n          skills: eachItem.skills.map(eachSkill => ({\n            imageUrl: eachSkill.image_url,\n            name: eachSkill.name,\n          })),\n          title: eachItem.title,\n        }),\n      )\n\n      const updatedSimilarJobDetails = fetchedJobData.similar_jobs.map(\n        eachItem => ({\n          companyLogoUrl: eachItem.company_logo_url,\n          id: eachItem.id,\n          jobDescription: eachItem.job_description,\n          location: eachItem.location,\n          rating: eachItem.rating,\n          title: eachItem.title,\n        }),\n      )\n      this.setState({\n        jobDataDetails: updatedJobDetailsData,\n        similarJobsData: updatedSimilarJobDetails,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderJobDetailsSuccessView = () => {\n    const {jobDataDetails, similarJobsData} = this.state\n    if (jobDataDetails.length >= 1) {\n      const {\n        companyLogoUrl,\n        companyWebsiteUrl,\n        employmentType,\n        jobDescription,\n        lifeAtCompany,\n        location,\n        packagePerAnnum,\n        rating,\n        skills,\n        title,\n      } = jobDataDetails[0]\n      return (\n        <>\n          <div className=\"job-item-container\">\n            <div className=\"first-part-container\">\n              <div className=\"img-title-container\">\n                <img\n                  className=\"company-logo\"\n                  src={companyLogoUrl}\n                  alt=\"job details company logo\"\n                />\n                <div className=\"title-rating-container\">\n                  <h1 className=\"title-heading\">{title}</h1>\n                  <div className=\"star-rating-container\">\n                    <AiFillStar className=\"star-icon\" />\n                    <p className=\"rating-text\">{rating}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"location-package-container\">\n                <div className=\"location-job-type-container\">\n                  <div className=\"location-icon-location-container\">\n                    <MdLocationOn className=\"location-icon\" />\n                    <p className=\"location\">{location}</p>\n                  </div>\n                  <div className=\"employment-type-icon-employment-type-container\">\n                    <p className=\"job-type\">{employmentType}</p>\n                  </div>\n                </div>\n                <div className=\"package-container\">\n                  <p className=\"package\">{packagePerAnnum}</p>\n                </div>\n              </div>\n            </div>\n            <hr className=\"item-hr-line\" />\n            <div className=\"second-part-container\">\n              <div className=\"description-visit-container\">\n                <h1 className=\"description-job-heading\">Description</h1>\n                <a className=\"visit-anchor\" href={companyWebsiteUrl}>\n                  Visit <BiLinkExternal />\n                </a>\n              </div>\n              <p className=\"description-para\">{jobDescription}</p>\n            </div>\n            <h1>Skills</h1>\n            <ul className=\"ul-job-details-container\">\n              {skills.map(eachItem => (\n                <li className=\"li-job-details-container\" key={eachItem.name}>\n                  <img\n                    className=\"skill-img\"\n                    src={eachItem.imageUrl}\n                    alt={eachItem.name}\n                  />\n                  <p>{eachItem.name}</p>\n                </li>\n              ))}\n            </ul>\n            <div className=\"company-life-img-container\">\n              <div className=\"life-heading-para-container\">\n                <h1>Life at Company</h1>\n                <p>{lifeAtCompany.description}</p>\n              </div>\n              <img src={lifeAtCompany.imageUrl} alt=\"life at company\" />\n            </div>\n          </div>\n          <h1 className=\"similar-jobs-heading\">Similar Jobs</h1>\n          <ul className=\"similar-jobs-ul-container\">\n            {similarJobsData.map(eachItem => (\n              <SimilarJobs\n                key={eachItem.id}\n                similarJobData={eachItem}\n                employmentType={employmentType}\n              />\n            ))}\n          </ul>\n        </>\n      )\n    }\n    return null\n  }\n\n  onRetryJobDetailsAgain = () => {\n    this.getJobData()\n  }\n\n  renderJobFailureView = () => (\n    <div className=\"job-details-failure-view\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n      />\n      <h1>Oops! Something Went Wrong</h1>\n      <p>we cannot seem to find the page you are looking for.</p>\n      <div className=\"btn-container-failure\">\n        <button\n          className=\"failure-jod-details-btn\"\n          type=\"button\"\n          onClick={this.onRetryJobDetailsAgain}\n        >\n          retry\n        </button>\n      </div>\n    </div>\n  )\n\n  renderJobLoadingView = () => (\n    <div className=\"job-details-loader\" testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderJobDetails = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderJobDetailsSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderJobFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderJobLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"job-details-view-container\">\n          {this.renderJobDetails()}\n        </div>\n      </>\n    )\n  }\n}\nexport default JobItemDetails\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n      alt=\"not found\"\n      className=\"not-found-img\"\n    />\n    <h1> Page Not Found </h1>\n    <p>we&apos;re sorry, the page you requested could not be found</p>\n  </div>\n)\nexport default NotFound\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookie from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookie.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Switch, Redirect, Route} from 'react-router-dom'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport JobItemDetails from './components/JobItemDetails'\nimport NotFound from './components/NotFound'\nimport './App.css'\nimport ProtectedRoute from './components/ProtectedRoute'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobItemDetails} />\n    <Route path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}